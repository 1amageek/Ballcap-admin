{"ast":null,"code":"var _jsxFileName = \"/Users/1amageek/Desktop/ballcap.ts/examples/with-next-and-firebase-hosting/src/app/components/Item.tsx\";\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Item from '../models/item';\n\nconst Index = () => {\n  const router = useRouter();\n  const id = router.query.id;\n  const [item, setItem] = useState(new Item(id)); // useEffect(() => {\n  // \tconst item = await (new Item(id)).fetch()\n  // })\n  // (async () => {\n  // \tconst item = await (new Item(id)).fetch()\n  // \tconsole.log(item)\n  // })()\n\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, item.name || \"aa\");\n}; // Index.getInitialProps = async () => {\n// \tconst router = useRouter()\n// \tconst id: string = router.query.id as string\n// \tconsole.log(\"aaaaaaaa\")\n// \treturn {}\n// }\n\n\nexport default Index;","map":{"version":3,"sources":["/Users/1amageek/Desktop/ballcap.ts/examples/with-next-and-firebase-hosting/src/app/components/Item.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAP,IAAgB,QAAhB,QAAuD,OAAvD;AACA,SAAS,SAAT,QAA0B,aAA1B;AACA,OAAO,IAAP,MAAiB,gBAAjB;;AAEA,MAAM,KAAK,GAAa,MAAK;AAE5B,QAAM,MAAM,GAAG,SAAS,EAAxB;AACA,QAAM,EAAE,GAAW,MAAM,CAAC,KAAP,CAAa,EAAhC;AACA,QAAM,CAAC,IAAD,EAAO,OAAP,IAAkB,QAAQ,CAAC,IAAI,IAAJ,CAAS,EAAT,CAAD,CAAhC,CAJ4B,CAM5B;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,IAAI,CAAC,IAAL,IAAa,IAAlB,CADD;AAGA,CAnBD,C,CAqBA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,KAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport { useRouter } from 'next/router'\nimport Item from '../models/item'\n\nconst Index: React.FC = () => {\n\n\tconst router = useRouter()\n\tconst id: string = router.query.id as string\n\tconst [item, setItem] = useState(new Item(id))\n\n\t// useEffect(() => {\n\t// \tconst item = await (new Item(id)).fetch()\n\t// })\n\n\t// (async () => {\n\t// \tconst item = await (new Item(id)).fetch()\n\t// \tconsole.log(item)\n\n\t// })()\n\n\treturn (\n\t\t<h1>{item.name || \"aa\"}</h1>\n\t)\n}\n\n// Index.getInitialProps = async () => {\n// \tconst router = useRouter()\n// \tconst id: string = router.query.id as string\n// \tconsole.log(\"aaaaaaaa\")\n// \treturn {}\n// }\n\nexport default Index"],"sourceRoot":""},"metadata":{},"sourceType":"module"}